import { Provider } from '@loopback/core';
import * as admin from 'firebase-admin';
import { FcmMessage, FcmNotification } from './types';
export declare class FcmProvider implements Provider<FcmNotification> {
    private readonly fcmInstance?;
    constructor(fcmInstance?: admin.app.App | undefined);
    fcmService: admin.app.App;
    initialValidations(message: FcmMessage): void;
    sendingPushToReceiverTokens(message: FcmMessage, generalMessageObj: {
        notification: admin.messaging.Notification;
        android?: admin.messaging.AndroidConfig;
        webpush?: admin.messaging.WebpushConfig;
        apns?: admin.messaging.ApnsConfig;
        fcmOptions?: admin.messaging.FcmOptions;
    }): Promise<string | import("firebase-admin/lib/messaging/messaging-api").BatchResponse>[];
    sendingPushToTopics(message: FcmMessage, generalMessageObj: {
        notification: admin.messaging.Notification;
        android?: admin.messaging.AndroidConfig;
        webpush?: admin.messaging.WebpushConfig;
        apns?: admin.messaging.ApnsConfig;
        fcmOptions?: admin.messaging.FcmOptions;
    }): Promise<string | import("firebase-admin/lib/messaging/messaging-api").BatchResponse>[];
    sendingPushToConditions(message: FcmMessage, generalMessageObj: {
        notification: admin.messaging.Notification;
        android?: admin.messaging.AndroidConfig;
        webpush?: admin.messaging.WebpushConfig;
        apns?: admin.messaging.ApnsConfig;
        fcmOptions?: admin.messaging.FcmOptions;
    }): Promise<string | import("firebase-admin/lib/messaging/messaging-api").BatchResponse>[];
    value(): {
        publish: (message: FcmMessage) => Promise<void>;
    };
}
